// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id                          String                        @id @unique
  email                       String                        @unique
  session                     Session[]
  Key                         Key[]
  role                        Role                          @default(USER)
  valid                       Boolean
  Profile                     Profile[]
  emailVerificationRequest    EmailVerificationRequest[]
  passwordVerificationRequest PasswordVerificationRequest[]

  @@map("user")
}

model Profile {
  id        String     @id @default(uuid())
  user      User       @relation(references: [id], fields: [user_id], onDelete: Cascade)
  user_id   String     @unique
  firstName String
  lastName  String
  country   String
  postalZip String
  birthday  String
  phone     String
  myneCard  MyneCard[]

  @@map("profile")
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("session")
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  primary         Boolean
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("key")
}

model MyneCard {
  id                 String    @id @unique @default(uuid())
  user_id            String    
  category           String
  subCategory        String
  brand              String
  size               String
  purchasedFrom      String
  description        String
  purchasedValue     String
  createdOn          DateTime  @default(now())
  isStolen           Boolean   @default(false)
  reportedStolenDate DateTime?
  isHeriloom         Boolean   @default(false)
  pictures           String[]  @default([])
  Profile            Profile?  @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  @@map("myneCard")
}

model EmailVerificationRequest {
  id        String   @id @unique
  email     String
  token     String   @unique @default(uuid())
  user_id   String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@map("emailVerificationRequest")
}

model PasswordVerificationRequest {
  id    String @id @unique
  email String

  token String @default(uuid())

  user_id   String
  expiresAt DateTime @db.Timestamp(1)
  user      User     @relation(references: [id], fields: [user_id])
}

enum Role {
  OWNR
  USER
  ADMIN
  DISTR
}
